{"version":3,"file":"JSONParser-B7c0NhYP.js","sources":["../../src/hooks/useJSONParser.ts","../../src/components/JSONParser.tsx","../../src/hooks/useWindowWidth.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\n\ninterface UseJSONParserReturn {\n  inputJSON: string;\n  formattedJSON: string;\n  error: string;\n  setInputJSON: (value: string) => void;\n  parseJSON: () => void;\n  clearError: () => void;\n  isValid: boolean;\n}\n\nexport const useJSONParser = (): UseJSONParserReturn => {\n  const [inputJSON, setInputJSON] = useState('');\n  const [formattedJSON, setFormattedJSON] = useState('');\n  const [error, setError] = useState('');\n  const [isValid, setIsValid] = useState(true);\n\n  const clearError = useCallback(() => {\n    setError('');\n    setIsValid(true);\n  }, []);\n\n  const parseJSON = useCallback(() => {\n    try {\n      if (!inputJSON.trim()) {\n        setError('Please enter some JSON data');\n        setFormattedJSON('');\n        setIsValid(false);\n        return;\n      }\n\n      // Try to parse JSON (handles both stringified and regular JSON)\n      const parsed = JSON.parse(inputJSON);\n      // Format as beautified JSON\n      setFormattedJSON(JSON.stringify(parsed, null, 2));\n      setError('');\n      setIsValid(true);\n    } catch (err) {\n      setError('Invalid JSON format');\n      setFormattedJSON('');\n      setIsValid(false);\n    }\n  }, [inputJSON]);\n\n  return {\n    inputJSON,\n    formattedJSON,\n    error,\n    setInputJSON,\n    parseJSON,\n    clearError,\n    isValid,\n  };\n};\n","import React from 'react';\nimport { useJSONParser } from '../hooks/useJSONParser';\nimport { useWindowWidth } from '../hooks/useWindowWidth';\n\nconst JSONParser: React.FC = () => {\n  const {\n    inputJSON,\n    formattedJSON,\n    error,\n    setInputJSON,\n    parseJSON,\n    isValid,\n  } = useJSONParser();\n\n  const { isMobile } = useWindowWidth(768);\n\n  const containerStyle: React.CSSProperties = {\n    padding: '20px',\n    fontFamily: 'Arial, sans-serif',\n  };\n\n  const mainContainerStyle: React.CSSProperties = {\n    display: 'flex',\n    gap: '20px',\n    flexWrap: 'wrap',\n  };\n\n  const sectionStyle: React.CSSProperties = {\n    flex: '1',\n    minWidth: '300px',\n  };\n\n  const headerStyle: React.CSSProperties = {\n    marginBottom: '10px',\n    color: '#333',\n  };\n\n  const textareaStyle: React.CSSProperties = {\n    width: '100%',\n    height: '400px',\n    padding: '10px',\n    border: '1px solid #ddd',\n    borderRadius: '4px',\n    fontFamily: '\"Courier New\", monospace',\n    fontSize: '14px',\n    resize: 'vertical',\n  };\n\n  const readonlyTextareaStyle: React.CSSProperties = {\n    ...textareaStyle,\n    backgroundColor: '#f9f9f9',\n  };\n\n  const buttonStyle: React.CSSProperties = {\n    marginTop: '10px',\n    padding: '10px 20px',\n    backgroundColor: '#007bff',\n    color: 'white',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '16px',\n  };\n\n  const errorStyle: React.CSSProperties = {\n    color: '#dc3545',\n    marginBottom: '10px',\n    fontWeight: 'bold',\n  };\n\n  const mobileContainerStyle: React.CSSProperties = {\n    ...mainContainerStyle,\n    flexDirection: 'column',\n  };\n\n  const mobileTextareaStyle: React.CSSProperties = {\n    ...textareaStyle,\n    height: '300px',\n  };\n\n  return (\n    <div style={containerStyle}>\n      <h1>JSON Parser</h1>\n      <div style={isMobile ? mobileContainerStyle : mainContainerStyle}>\n        <div style={sectionStyle}>\n          <h2 style={headerStyle}>JSON Editor</h2>\n          <textarea\n            value={inputJSON}\n            onChange={(e) => setInputJSON(e.target.value)}\n            placeholder=\"Paste your JSON here (valid JSON or stringified JSON)\"\n            style={isMobile ? mobileTextareaStyle : textareaStyle}\n          />\n          <button\n            onClick={parseJSON}\n            style={{ ...buttonStyle, backgroundColor: isValid ? '#007bff' : '#dc3545' }}\n            onMouseEnter={(e) => (e.currentTarget.style.backgroundColor = isValid ? '#0056b3' : '#b02a37')}\n            onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = isValid ? '#007bff' : '#dc3545')}\n          >\n            Validate & Parse\n          </button>\n        </div>\n\n        <div style={sectionStyle}>\n          <h2 style={headerStyle}>Formatted View</h2>\n          {error && <div style={errorStyle}>{error}</div>}\n          <textarea\n            value={formattedJSON}\n            readOnly\n            placeholder=\"Formatted JSON will appear here...\"\n            style={isMobile ? { ...mobileTextareaStyle, backgroundColor: '#f9f9f9' } : readonlyTextareaStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JSONParser;\n","import { useState, useEffect, useCallback } from 'react';\n\ninterface UseWindowWidthReturn {\n  width: number;\n  isMobile: boolean;\n  isTablet: boolean;\n  isDesktop: boolean;\n}\n\nexport const useWindowWidth = (\n  mobileBreakpoint = 768,\n  tabletBreakpoint = 1024\n): UseWindowWidthReturn => {\n  const [width, setWidth] = useState<number>(window.innerWidth);\n\n  const updateWidth = useCallback(() => {\n    setWidth(window.innerWidth);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('resize', updateWidth);\n\n    return () => {\n      window.removeEventListener('resize', updateWidth);\n    };\n  }, [updateWidth]);\n\n  const isMobile = width <= mobileBreakpoint;\n  const isTablet = width > mobileBreakpoint && width <= tabletBreakpoint;\n  const isDesktop = width > tabletBreakpoint;\n\n  return {\n    width,\n    isMobile,\n    isTablet,\n    isDesktop,\n  };\n};\n"],"names":["JSONParser","inputJSON","formattedJSON","error","setInputJSON","parseJSON","isValid","useState","setFormattedJSON","setError","setIsValid","clearError","useCallback","trim","parsed","JSON","parse","stringify","err","useJSONParser","isMobile","mobileBreakpoint","tabletBreakpoint","width","setWidth","window","innerWidth","updateWidth","useEffect","addEventListener","removeEventListener","isTablet","isDesktop","useWindowWidth","mainContainerStyle","display","gap","flexWrap","sectionStyle","flex","minWidth","headerStyle","marginBottom","color","textareaStyle","height","padding","border","borderRadius","fontFamily","fontSize","resize","readonlyTextareaStyle","backgroundColor","mobileContainerStyle","flexDirection","mobileTextareaStyle","jsxs","style","children","jsx","value","onChange","e","target","placeholder","onClick","marginTop","cursor","onMouseEnter","currentTarget","onMouseLeave","fontWeight","readOnly"],"mappings":"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"}