{"version":3,"file":"ColorPickerView-DWRjSlSC.js","sources":["../../src/hooks/useColorPicker.ts","../../src/components/ManualColorPicker.tsx","../../src/components/ColorCanvas.tsx","../../src/components/ColorPicker/ColorPicker.tsx","../../src/components/ColorPicker/hook/useColorPickerStyles.ts","../../src/views/ColorPickerView.tsx"],"sourcesContent":["import { useState, useCallback, useMemo } from 'react';\nimport { Color, ColorPalette } from '../types';\n\nexport interface ColorPickerState {\n  selectedColor: Color | null;\n  palettes: ColorPalette[];\n  currentPalette: string | null;\n  colorWheelVisible: boolean;\n  manualPalette: Color[];\n  canvasPreviewVisible: boolean;\n}\n\nexport type { Color, ColorPalette };\n\nexport const useColorPicker = () => {\n  const [state, setState] = useState<ColorPickerState>({\n    selectedColor: null,\n    palettes: [],\n    currentPalette: null,\n    colorWheelVisible: false,\n    manualPalette: [],\n    canvasPreviewVisible: false,\n  });\n\n  // Predefined color palettes\n  const predefinedPalettes = useMemo<ColorPalette[]>(() => [\n    {\n      id: 'warm-tones',\n      name: 'Warm Tones',\n      type: 'manual',\n      colors: [\n        { hex: '#FF6B6B', rgb: { r: 255, g: 107, b: 107 }, hsl: { h: 0, s: 100, l: 70 }, temperature: 'warm' },\n        { hex: '#FF8E53', rgb: { r: 255, g: 142, b: 83 }, hsl: { h: 23, s: 100, l: 66 }, temperature: 'warm' },\n        { hex: '#FFCC02', rgb: { r: 255, g: 204, b: 2 }, hsl: { h: 52, s: 100, l: 51 }, temperature: 'warm' },\n        { hex: '#FFB347', rgb: { r: 255, g: 179, b: 71 }, hsl: { h: 39, s: 100, l: 64 }, temperature: 'warm' },\n        { hex: '#FF683B', rgb: { r: 255, g: 104, b: 59 }, hsl: { h: 14, s: 100, l: 61 }, temperature: 'warm' },\n      ],\n    },\n    {\n      id: 'cool-tones',\n      name: 'Cool Tones',\n      type: 'manual',\n      colors: [\n        { hex: '#4ECDC4', rgb: { r: 78, g: 205, b: 196 }, hsl: { h: 173, s: 56, l: 55 }, temperature: 'cool' },\n        { hex: '#45B7D1', rgb: { r: 69, g: 183, b: 209 }, hsl: { h: 194, s: 60, l: 54 }, temperature: 'cool' },\n        { hex: '#96CEB4', rgb: { r: 150, g: 206, b: 180 }, hsl: { h: 150, s: 56, l: 70 }, temperature: 'cool' },\n        { hex: '#54C4C1', rgb: { r: 84, g: 196, b: 193 }, hsl: { h: 178, s: 49, l: 55 }, temperature: 'cool' },\n        { hex: '#26C6DA', rgb: { r: 38, g: 198, b: 218 }, hsl: { h: 188, s: 68, l: 50 }, temperature: 'cool' },\n      ],\n    },\n    {\n      id: 'mono-pastels',\n      name: 'Monochrome Pastels',\n      type: 'manual',\n      colors: [\n        { hex: '#F8F9FA', rgb: { r: 248, g: 249, b: 250 }, hsl: { h: 210, s: 14, l: 97 }, temperature: 'neutral' },\n        { hex: '#E9ECEF', rgb: { r: 233, g: 236, b: 239 }, hsl: { h: 210, s: 14, l: 93 }, temperature: 'neutral' },\n        { hex: '#DEE2E6', rgb: { r: 222, g: 226, b: 230 }, hsl: { h: 210, s: 11, l: 89 }, temperature: 'neutral' },\n        { hex: '#CED4DA', rgb: { r: 206, g: 212, b: 218 }, hsl: { h: 210, s: 11, l: 84 }, temperature: 'neutral' },\n        { hex: '#ADB5BD', rgb: { r: 173, g: 181, b: 189 }, hsl: { h: 210, s: 10, l: 75 }, temperature: 'neutral' },\n      ],\n    },\n    {\n      id: 'vivid-colors',\n      name: 'Vivid Vibrants',\n      type: 'manual',\n      colors: [\n        { hex: '#FF0080', rgb: { r: 255, g: 0, b: 128 }, hsl: { h: 330, s: 100, l: 50 }, temperature: 'warm' },\n        { hex: '#8000FF', rgb: { r: 128, g: 0, b: 255 }, hsl: { h: 270, s: 100, l: 50 }, temperature: 'cool' },\n        { hex: '#00FF80', rgb: { r: 0, g: 255, b: 128 }, hsl: { h: 150, s: 100, l: 50 }, temperature: 'cool' },\n        { hex: '#FF8000', rgb: { r: 255, g: 128, b: 0 }, hsl: { h: 30, s: 100, l: 50 }, temperature: 'warm' },\n        { hex: '#0080FF', rgb: { r: 0, g: 128, b: 255 }, hsl: { h: 210, s: 100, l: 50 }, temperature: 'cool' },\n      ],\n    },\n  ], []);\n\n  // Generate color wheel points\n  const generateColorWheel = useCallback(() => {\n    const colors: Color[] = [];\n    const steps = 36; // 36 colors around the wheel\n\n    for (let i = 0; i < steps; i++) {\n      const hue = (i * 360) / steps;\n      const saturation = 70 + Math.random() * 30; // 70-100%\n      const lightness = 45 + Math.random() * 10; // 45-55%\n\n      // Convert HSL to RGB\n      const c = (1 - Math.abs(2 * lightness / 100 - 1)) * saturation / 100;\n      const x = c * (1 - Math.abs((hue / 60) % 2 - 1));\n      const m = lightness / 100 - c / 2;\n\n      let r, g, b;\n\n      if (hue >= 0 && hue < 60) {\n        [r, g, b] = [c, x, 0];\n      } else if (hue >= 60 && hue < 120) {\n        [r, g, b] = [x, c, 0];\n      } else if (hue >= 120 && hue < 180) {\n        [r, g, b] = [0, c, x];\n      } else if (hue >= 180 && hue < 240) {\n        [r, g, b] = [0, x, c];\n      } else if (hue >= 240 && hue < 300) {\n        [r, g, b] = [x, 0, c];\n      } else {\n        [r, g, b] = [c, 0, x];\n      }\n\n      const finalR = Math.round((r + m) * 255);\n      const finalG = Math.round((g + m) * 255);\n      const finalB = Math.round((b + m) * 255);\n\n      const hexValue = `#${finalR.toString(16).padStart(2, '0')}${finalG.toString(16).padStart(2, '0')}${finalB.toString(16).padStart(2, '0')}`;\n\n      // Determine temperature\n      let temperature: 'warm' | 'cool' | 'neutral' = 'neutral';\n      if (hue > 0 && hue < 180) {\n        temperature = 'warm';\n      } else if (hue > 180 && hue < 360) {\n        temperature = 'cool';\n      }\n\n      colors.push({\n        hex: hexValue.toUpperCase(),\n        rgb: { r: finalR, g: finalG, b: finalB },\n        hsl: { h: Math.round(hue), s: Math.round(saturation), l: Math.round(lightness) },\n        temperature,\n      });\n    }\n\n    return colors;\n  }, []);\n\n  // Export palette as CSV\n  const exportAsCSV = useCallback((paletteId: string) => {\n    // Find in generated palettes first, then predefined palettes\n    let palette = state.palettes.find(p => p.id === paletteId);\n    if (!palette) {\n      palette = predefinedPalettes.find(p => p.id === paletteId);\n    }\n    if (!palette) return;\n\n    const csvContent = [\n      'Color Name,Hex,RGB,HSL,Temperature',\n      ...palette.colors.map((color, index) =>\n        `${palette.name} ${index + 1},${color.hex},rgb(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}),hsl(${color.hsl.h}, ${color.hsl.s}%, ${color.hsl.l}%),${color.temperature}`\n      )\n    ].join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = `${palette.name.toLowerCase().replace(' ', '-')}-palette.csv`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }, [predefinedPalettes, state.palettes]);\n\n  // Export palette as Figma JSON\n  const exportAsFigma = useCallback((paletteId: string) => {\n    // Find in generated palettes first, then predefined palettes\n    let palette = state.palettes.find(p => p.id === paletteId);\n    if (!palette) {\n      palette = predefinedPalettes.find(p => p.id === paletteId);\n    }\n    if (!palette) return;\n\n    const figmaData = {\n      name: palette.name,\n      colors: palette.colors.map((color, index) => ({\n        name: `${index + 1}`,\n        hex: color.hex,\n        rgb: color.rgb,\n        hsl: color.hsl,\n        temperature: color.temperature,\n      })),\n    };\n\n    const jsonContent = JSON.stringify(figmaData, null, 2);\n    const blob = new Blob([jsonContent], { type: 'application/json;charset=utf-8;' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = `${palette.name.toLowerCase().replace(' ', '-')}-palette.fig`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }, [predefinedPalettes, state.palettes]);\n\n  // Select a color\n  const selectColor = useCallback((color: Color) => {\n    setState(prev => ({ ...prev, selectedColor: color }));\n  }, []);\n\n  // Generate a new random palette\n  const generatePalette = useCallback(() => {\n    const newPalette: ColorPalette = {\n      id: `generated-${Date.now()}`,\n      name: 'Generated Palette',\n      type: 'generated',\n      colors: generateColorWheel().slice(0, 6),\n    };\n\n    setState(prev => ({\n      ...prev,\n      palettes: [...prev.palettes, newPalette],\n    }));\n\n    return newPalette;\n  }, [generateColorWheel]);\n\n  // Toggle color wheel visibility\n  const toggleColorWheel = useCallback(() => {\n    setState(prev => ({\n      ...prev,\n      colorWheelVisible: !prev.colorWheelVisible,\n    }));\n  }, []);\n\n  // Add color to manual palette\n  const addColorToManualPalette = useCallback((color: Color) => {\n    setState(prev => ({\n      ...prev,\n      manualPalette: [...prev.manualPalette, color],\n    }));\n  }, []);\n\n  // Remove color from manual palette\n  const removeColorFromManualPalette = useCallback((colorIndex: number) => {\n    setState(prev => ({\n      ...prev,\n      manualPalette: prev.manualPalette.filter((_, index) => index !== colorIndex),\n    }));\n  }, []);\n\n  // Create palette from manual selection\n  const createManualPalette = useCallback((name: string) => {\n    if (state.manualPalette.length === 0) return null;\n\n    const newPalette: ColorPalette = {\n      id: `manual-${Date.now()}`,\n      name: name || 'My Custom Palette',\n      type: 'manual',\n      colors: [...state.manualPalette],\n    };\n\n    setState(prev => ({\n      ...prev,\n      palettes: [...prev.palettes, newPalette],\n      manualPalette: [], // Clear manual palette after creating\n    }));\n\n    return newPalette;\n  }, [state.manualPalette]);\n\n  // Toggle canvas preview visibility\n  const toggleCanvasPreview = useCallback(() => {\n    setState(prev => ({\n      ...prev,\n      canvasPreviewVisible: !prev.canvasPreviewVisible,\n    }));\n  }, []);\n\n  // Create a color from hex, rgb values\n  const createColorFromHex = useCallback((hexValue: string): Color | null => {\n    if (!hexValue.startsWith('#')) return null;\n\n    const hex = hexValue.substring(1);\n    const rgb = {\n      r: parseInt(hex.substring(0, 2), 16),\n      g: parseInt(hex.substring(2, 4), 16),\n      b: parseInt(hex.substring(4, 6), 16),\n    };\n\n    // RGB to HSL conversion for temperature detection\n    const r = rgb.r / 255;\n    const g = rgb.g / 255;\n    const b = rgb.b / 255;\n\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h: number, s: number, l: number;\n\n    l = (max + min) / 2;\n\n    if (max === min) {\n      h = s = 0;\n    } else {\n      const d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: h = 0;\n      }\n      h /= 6;\n    }\n\n    h = Math.round(h * 360);\n    s = Math.round(s * 100);\n    l = Math.round(l * 100);\n\n    // Determine temperature based on hue\n    let temperature: 'warm' | 'cool' | 'neutral' = 'neutral';\n    if (h > 0 && h < 180) {\n      temperature = 'warm';\n    } else if (h > 180 && h < 360) {\n      temperature = 'cool';\n    }\n\n    return {\n      hex: hexValue.toUpperCase(),\n      rgb,\n      hsl: { h, s, l },\n      temperature,\n    };\n  }, []);\n\n  return {\n    state,\n    predefinedPalettes,\n    selectColor,\n    exportAsCSV,\n    exportAsFigma,\n    generatePalette,\n    toggleColorWheel,\n    generateColorWheel,\n    addColorToManualPalette,\n    removeColorFromManualPalette,\n    createManualPalette,\n    toggleCanvasPreview,\n    createColorFromHex,\n  };\n};\n","import React, { useState } from 'react';\nimport { Color } from '../hooks/useColorPicker';\n\ninterface ManualColorPickerProps {\n  colors: Color[];\n  onAddColor: (color: Color) => void;\n  onRemoveColor: (index: number) => void;\n  onCreatePalette: (name: string) => void;\n}\n\nconst ManualColorPicker: React.FC<ManualColorPickerProps> = ({\n  colors,\n  onAddColor,\n  onRemoveColor,\n  onCreatePalette,\n}) => {\n  const [hexInput, setHexInput] = useState('#');\n  const [paletteName, setPaletteName] = useState('');\n  const [rgbInput, setRgbInput] = useState({ r: 255, g: 107, b: 107 });\n\n  const hexToRgb = (hex: string): { r: number; g: number; b: number } | null => {\n    if (!hex.startsWith('#') || hex.length !== 7) return null;\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null;\n  };\n\n  const rgbToHex = (r: number, g: number, b: number): string => {\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n  };\n\n  const handleHexInputChange = (value: string) => {\n    setHexInput(value);\n    const rgb = hexToRgb(value);\n    if (rgb) {\n      setRgbInput(rgb);\n    }\n  };\n\n  const handleRgbInputChange = (component: 'r' | 'g' | 'b', value: number) => {\n    const newRgb = { ...rgbInput, [component]: value };\n    setRgbInput(newRgb);\n    setHexInput(rgbToHex(newRgb.r, newRgb.g, newRgb.b));\n  };\n\n  const addCurrentColor = () => {\n    const rgb = hexToRgb(hexInput);\n    if (rgb) {\n      // Convert RGB to HSL for temperature detection\n      const r = rgb.r / 255;\n      const g = rgb.g / 255;\n      const b = rgb.b / 255;\n\n      const max = Math.max(r, g, b);\n      const min = Math.min(r, g, b);\n      let h, s, l;\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0;\n      } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n          case g: h = (b - r) / d + 2; break;\n          case b: h = (r - g) / d + 4; break;\n          default: h = 0;\n        }\n        h /= 6;\n      }\n\n      h = Math.round(h * 360);\n      s = Math.round(s * 100);\n      l = Math.round(l * 100);\n\n      // Determine temperature based on hue\n      let temperature: 'warm' | 'cool' | 'neutral' = 'neutral';\n      if (h > 0 && h < 180) {\n        temperature = 'warm';\n      } else if (h > 180 && h < 360) {\n        temperature = 'cool';\n      }\n\n      const newColor: Color = {\n        hex: hexInput.toUpperCase(),\n        rgb,\n        hsl: { h, s, l },\n        temperature,\n      };\n\n      onAddColor(newColor);\n      setHexInput('#');\n      setRgbInput({ r: 255, g: 107, b: 107 });\n    }\n  };\n\n  const removeColorFromPalette = (index: number) => {\n    onRemoveColor(index);\n  };\n\n  return (\n    <div style={{\n      marginTop: '40px',\n      padding: '25px',\n      backgroundColor: 'white',\n      borderRadius: '16px',\n      boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n    }}>\n      <h3 style={{\n        fontSize: '1.5rem',\n        fontWeight: 'bold',\n        color: '#2c3e50',\n        marginBottom: '20px',\n        textAlign: 'center',\n      }}>\n        🎨 Manual Color Picker\n      </h3>\n\n      {/* Color Selection Tools */}\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '20px',\n        marginBottom: '30px',\n      }}>\n        <div style={{\n          display: 'flex',\n          gap: '20px',\n          alignItems: 'center',\n          justifyContent: 'center',\n          flexWrap: 'wrap',\n        }}>\n          {/* Hex input with color picker */}\n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            <label style={{\n              fontSize: '0.9rem',\n              color: '#6c757d',\n              marginBottom: '5px',\n              fontWeight: '500',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px',\n            }}>\n              🎨 Hex Color\n            </label>\n\n            {/* Native color picker */}\n            <input\n              type=\"color\"\n              value={hexInput.startsWith('#') && hexInput.length === 7 ? hexInput : '#FF6B6B'}\n              onChange={(e) => handleHexInputChange(e.target.value)}\n              title=\"Click to open color picker or paste hex value\"\n              style={{\n                width: '120px',\n                height: '40px',\n                border: '2px solid #dee2e6',\n                borderRadius: '8px',\n                cursor: 'pointer',\n                background: hexInput.startsWith('#') && hexInput.length === 7 ? hexInput : '#FF6B6B',\n                color: '#fff',\n                fontSize: '0.9rem',\n                fontWeight: 'bold',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                padding: '8px 12px',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n              }}\n            />\n\n            {/* Hex text input */}\n            <input\n              type=\"text\"\n              value={hexInput}\n              onChange={(e) => handleHexInputChange(e.target.value)}\n              placeholder=\"#FF6B6B\"\n              title=\"Type or paste hex color code (e.g. #FF6B6B)\"\n              style={{\n                marginTop: '10px',\n                padding: '10px 12px',\n                border: '2px solid #dee2e6',\n                borderRadius: '8px',\n                fontSize: '1rem',\n                width: '120px',\n                textAlign: 'center',\n                backgroundColor: hexInput.startsWith('#') && hexInput.length === 7 ? hexInput : '#fff',\n                color: hexInput.startsWith('#') && hexInput.length === 7 ? '#fff' : '#2c3e50',\n                fontWeight: 'bold',\n                textShadow: hexInput.startsWith('#') && hexInput.length === 7 ? '0 0 2px rgba(255,255,255,0.8)' : 'none',\n              }}\n            />\n          </div>\n\n          {/* RGB Sliders */}\n          <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n              <label style={{\n                fontSize: '0.8rem',\n                color: '#6c757d',\n                marginBottom: '2px',\n              }}>\n                R\n              </label>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"255\"\n                value={rgbInput.r}\n                onChange={(e) => handleRgbInputChange('r', parseInt(e.target.value))}\n                style={{\n                  width: '100px',\n                  height: '6px',\n                  borderRadius: '3px',\n                  background: 'linear-gradient(to right, #000000, #ff0000)',\n                  outline: 'none',\n                  cursor: 'pointer',\n                }}\n              />\n              <span style={{\n                fontSize: '0.8rem',\n                fontWeight: 'bold',\n                color: '#2c3e50',\n                marginTop: '2px',\n              }}>\n                {rgbInput.r}\n              </span>\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n              <label style={{\n                fontSize: '0.8rem',\n                color: '#6c757d',\n                marginBottom: '2px',\n              }}>\n                G\n              </label>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"255\"\n                value={rgbInput.g}\n                onChange={(e) => handleRgbInputChange('g', parseInt(e.target.value))}\n                style={{\n                  width: '100px',\n                  height: '6px',\n                  borderRadius: '3px',\n                  background: 'linear-gradient(to right, #000000, #00ff00)',\n                  outline: 'none',\n                  cursor: 'pointer',\n                }}\n              />\n              <span style={{\n                fontSize: '0.8rem',\n                fontWeight: 'bold',\n                color: '#2c3e50',\n                marginTop: '2px',\n              }}>\n                {rgbInput.g}\n              </span>\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n              <label style={{\n                fontSize: '0.8rem',\n                color: '#6c757d',\n                marginBottom: '2px',\n              }}>\n                B\n              </label>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"255\"\n                value={rgbInput.b}\n                onChange={(e) => handleRgbInputChange('b', parseInt(e.target.value))}\n                style={{\n                  width: '100px',\n                  height: '6px',\n                  borderRadius: '3px',\n                  background: 'linear-gradient(to right, #000000, #0000ff)',\n                  outline: 'none',\n                  cursor: 'pointer',\n                }}\n              />\n              <span style={{\n                fontSize: '0.8rem',\n                fontWeight: 'bold',\n                color: '#2c3e50',\n                marginTop: '2px',\n              }}>\n                {rgbInput.b}\n              </span>\n            </div>\n          </div>\n\n          {/* Add Color Button */}\n          <button\n            onClick={addCurrentColor}\n            disabled={!hexInput.startsWith('#') || hexInput.length !== 7}\n            style={{\n              padding: '12px 20px',\n              backgroundColor: hexInput.startsWith('#') && hexInput.length === 7 ? '#3498db' : '#95a5a6',\n              color: 'white',\n              border: 'none',\n              borderRadius: '8px',\n              cursor: hexInput.startsWith('#') && hexInput.length === 7 ? 'pointer' : 'not-allowed',\n              fontSize: '0.9rem',\n              fontWeight: 'bold',\n              marginTop: '20px',\n            }}\n          >\n            ➕ Add Color\n          </button>\n        </div>\n      </div>\n\n      {/* Current Manual Palette */}\n      {colors.length > 0 && (\n        <div style={{ marginBottom: '20px' }}>\n          <div style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: '15px',\n          }}>\n            <h4 style={{\n              fontSize: '1.2rem',\n              color: '#2c3e50',\n              margin: 0,\n            }}>\n              🌈 Current Palette ({colors.length} colors)\n            </h4>\n\n            <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\n              <input\n                type=\"text\"\n                value={paletteName}\n                onChange={(e) => setPaletteName(e.target.value)}\n                placeholder=\"Palette name\"\n                style={{\n                  padding: '6px 12px',\n                  border: '1px solid #dee2e6',\n                  borderRadius: '4px',\n                  fontSize: '0.9rem',\n                }}\n              />\n              <button\n                onClick={() => onCreatePalette(paletteName)}\n                style={{\n                  padding: '8px 16px',\n                  backgroundColor: '#27ae60',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  fontSize: '0.9rem',\n                  fontWeight: 'bold',\n                }}\n              >\n                💾 Save Palette\n              </button>\n            </div>\n          </div>\n\n          <div style={{\n            display: 'flex',\n            gap: '12px',\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n          }}>\n            {colors.map((color, index) => (\n              <div\n                key={index}\n                style={{\n                  position: 'relative',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                }}\n              >\n                <div\n                  style={{\n                    width: '60px',\n                    height: '60px',\n                    backgroundColor: color.hex,\n                    borderRadius: '8px',\n                    border: '2px solid #ddd',\n                    cursor: 'pointer',\n                    transition: 'transform 0.2s ease',\n                  }}\n                  onMouseEnter={(e) => (e.currentTarget.style.transform = 'scale(1.1)')}\n                  onMouseLeave={(e) => (e.currentTarget.style.transform = 'scale(1)')}\n                  title={`${color.hex} - ${color.temperature}`}\n                />\n\n                <button\n                  onClick={() => removeColorFromPalette(index)}\n                  style={{\n                    position: 'absolute',\n                    top: '-5px',\n                    right: '-5px',\n                    width: '20px',\n                    height: '20px',\n                    backgroundColor: '#e74c3c',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '50%',\n                    cursor: 'pointer',\n                    fontSize: '12px',\n                    fontWeight: 'bold',\n                    lineHeight: '1',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                  title=\"Remove color\"\n                >\n                  ×\n                </button>\n\n                <span style={{\n                  fontSize: '0.7rem',\n                  color: '#6c757d',\n                  marginTop: '4px',\n                  textAlign: 'center',\n                  width: '60px',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  whiteSpace: 'nowrap',\n                }}>\n                  {color.hex}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ManualColorPicker;\n","import React, { useRef, useEffect, useCallback } from 'react';\nimport { Color } from '../hooks/useColorPicker';\n\ninterface ColorCanvasProps {\n  colors: Color[];\n  width?: number;\n  height?: number;\n  pattern?: 'linear' | 'radial' | 'mosaic' | 'spiral';\n}\n\nconst ColorCanvas: React.FC<ColorCanvasProps> = ({\n  colors,\n  width = 800,\n  height = 600,\n  pattern = 'linear'\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const generatePattern = useCallback((\n    ctx: CanvasRenderingContext2D,\n    canvasColors: Color[],\n    canvasWidth: number,\n    canvasHeight: number,\n    canvasPattern: string\n  ) => {\n    if (canvasColors.length === 0) return;\n\n    const rectangles = canvasWidth * canvasHeight;\n    const colorsWithOpacities = canvasColors.map((color, index) => ({\n      ...color,\n      opacity: 1 - (index * 0.2) / canvasColors.length, // Gradient opacity\n    }));\n\n    switch (canvasPattern) {\n      case 'mosaic':\n        for (let i = 0; i < 20; i++) {\n          for (let j = 0; j < 15; j++) {\n            const x = i * (canvasWidth / 20);\n            const y = j * (canvasHeight / 15);\n            const colorIndex = (i + j) % canvasColors.length;\n            const color = colorsWithOpacities[colorIndex];\n\n            ctx.fillStyle = `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.opacity})`;\n            ctx.fillRect(x, y, canvasWidth / 20, canvasHeight / 15);\n          }\n        }\n        break;\n\n      case 'spiral':\n        const spiralCenterX = canvasWidth / 2;\n        const spiralCenterY = canvasHeight / 2;\n        const spiralMaxRadius = Math.min(canvasWidth, canvasHeight) / 2;\n\n        for (let angle = 0; angle < 360; angle += 10) {\n          for (let radius = 0; radius < spiralMaxRadius; radius += 10) {\n            const x = spiralCenterX + Math.cos((angle * Math.PI) / 180) * radius;\n            const y = spiralCenterY + Math.sin((angle * Math.PI) / 180) * radius;\n            const colorIndex = Math.floor((angle + radius) / 50) % colorsWithOpacities.length;\n            const color = colorsWithOpacities[colorIndex];\n\n            ctx.fillStyle = `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.opacity})`;\n            ctx.fillRect(x, y, 12, 12);\n          }\n        }\n        break;\n\n      case 'radial':\n        // Radial gradient pattern\n        const centerX = canvasWidth / 2;\n        const centerY = canvasHeight / 2;\n        const maxRadius = Math.min(canvasWidth, canvasHeight) / 2;\n        const gradient = ctx.createRadialGradient(\n          centerX, centerY, 0,\n          centerX, centerY, maxRadius\n        );\n\n        colorsWithOpacities.forEach((color, index) => {\n          const position = index / (colorsWithOpacities.length - 1);\n          gradient.addColorStop(\n            position,\n            `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.opacity})`\n          );\n        });\n\n        ctx.fillStyle = gradient;\n        ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n\n        // Add concentric circles\n        ctx.strokeStyle = '#ffffff';\n        ctx.lineWidth = 3;\n\n        for (let radius = 50; radius < maxRadius; radius += 50) {\n          ctx.beginPath();\n          ctx.arc(centerX, centerY, radius, 0, Math.PI * 2);\n          ctx.stroke();\n        }\n        break;\n\n      case 'linear':\n      default:\n        // Linear interpolation pattern\n        const gridSize = 20;\n        for (let x = 0; x < canvasWidth; x += gridSize) {\n          for (let y = 0; y < canvasHeight; y += gridSize) {\n            const xRatio = x / canvasWidth;\n            const yRatio = y / canvasHeight;\n            const distance = Math.sqrt(xRatio * xRatio + yRatio * yRatio);\n            const colorIndex = Math.floor(distance * colorsWithOpacities.length) % colorsWithOpacities.length;\n            const color = colorsWithOpacities[colorIndex];\n\n            ctx.fillStyle = `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.opacity})`;\n            ctx.fillRect(x, y, gridSize, gridSize);\n          }\n        }\n\n        // Add color information text\n        ctx.fillStyle = '#ffffff';\n        ctx.font = '16px Arial';\n        ctx.textAlign = 'center';\n        colorsWithOpacities.forEach((color, index) => {\n          const x = (index + 0.5) * (canvasWidth / colorsWithOpacities.length);\n          const y = canvasHeight - 20;\n          ctx.fillText(color.hex, x, y);\n        });\n        break;\n    }\n  }, []);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Generate pattern\n    generatePattern(ctx, colors, width, height, pattern);\n\n  }, [colors, width, height, pattern, generatePattern]);\n\n  return (\n    <div style={{\n      marginTop: '20px',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: '15px',\n    }}>\n      <h3 style={{\n        fontSize: '1.4rem',\n        color: '#2c3e50',\n        margin: 0,\n        textAlign: 'center',\n      }}>\n        🎨 Canvas Preview - {pattern.charAt(0).toUpperCase() + pattern.slice(1)} Pattern\n      </h3>\n\n      <div style={{\n        border: '3px solid #34495e',\n        borderRadius: '12px',\n        overflow: 'hidden',\n        boxShadow: '0 8px 25px rgba(0,0,0,0.15)',\n        backgroundColor: '#f8f9fa',\n      }}>\n        <canvas\n          ref={canvasRef}\n          width={width}\n          height={height}\n          style={{\n            display: 'block',\n            imageRendering: 'pixelated',\n          }}\n        />\n      </div>\n\n      <div style={{\n        display: 'flex',\n        gap: '15px',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        marginTop: '10px',\n      }}>\n        {colors.map((color, index) => (\n          <div\n            key={index}\n            style={{\n              width: '40px',\n              height: '40px',\n              backgroundColor: color.hex,\n              borderRadius: '8px',\n              border: '2px solid #ddd',\n              cursor: 'pointer',\n              position: 'relative',\n            }}\n            title={`${color.hex} - Temperature: ${color.temperature}`}\n          />\n        ))}\n      </div>\n\n      <div style={{\n        fontSize: '1rem',\n        color: '#6c757d',\n        textAlign: 'center',\n        margin: '10px 0',\n      }}>\n        Palette with {colors.length} colors • Pattern: {pattern.charAt(0).toUpperCase() + pattern.slice(1)}\n      </div>\n    </div>\n  );\n};\n\nexport default ColorCanvas;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Heading,\n  Text,\n  Flex,\n  VStack,\n  HStack,\n  Card,\n  CardBody,\n  CardHeader,\n  Badge,\n  SimpleGrid,\n  Alert,\n} from '@chakra-ui/react';\nimport { useColorPicker, ColorPalette, Color } from '../../hooks/useColorPicker';\nimport { useColorPickerStyles } from './hook/useColorPickerStyles';\nimport ManualColorPicker from '../ManualColorPicker';\nimport ColorCanvas from '../ColorCanvas';\n\nconst ColorPicker: React.FC = () => {\n  const {\n    state,\n    predefinedPalettes,\n    selectColor,\n    exportAsCSV,\n    exportAsFigma,\n    generatePalette,\n    toggleColorWheel,\n    addColorToManualPalette,\n    removeColorFromManualPalette,\n    createManualPalette,\n    toggleCanvasPreview,\n  } = useColorPicker();\n  const { colorPickerStyles } = useColorPickerStyles();\n  const [currentPattern, setCurrentPattern] = useState<'linear' | 'radial' | 'mosaic' | 'spiral'>('linear');\n\n  // Color swatch component\n  const ColorSwatch: React.FC<{ color: Color; onClick: () => void; isSelected?: boolean }> = ({\n    color,\n    onClick,\n    isSelected = false,\n  }) => (\n    <Box\n      as=\"button\"\n      onClick={onClick}\n      w=\"12\"\n      h=\"12\"\n      bg={color.hex}\n      borderRadius=\"md\"\n      border={isSelected ? \"3px solid\" : \"2px solid\"}\n      borderColor={isSelected ? \"blue.500\" : \"gray.300\"}\n      _hover={{ shadow: \"lg\", transform: \"scale(1.05)\" }}\n      transition=\"all 0.2s\"\n      title={`${color.hex} - HSL(${color.hsl.h}, ${color.hsl.s}%, ${color.hsl.l}%) - ${color.temperature}`}\n      cursor=\"pointer\"\n      p={0}\n    />\n  );\n\n  // Color wheel component\n  const ColorWheel: React.FC = () => {\n    const { generateColorWheel } = useColorPicker();\n    const wheelColors = generateColorWheel();\n\n    return (\n      <Card.Root mb={8}>\n        <Card.Header>\n          <Heading size=\"lg\">\n            🌀 Color Wheel - Full Spectrum\n          </Heading>\n        </Card.Header>\n        <Card.Body>\n          <SimpleGrid columns={{ base: 6, sm: 8, md: 12, lg: 16 }} gap={3}>\n            {wheelColors.map((color, index) => (\n              <ColorSwatch\n                key={index}\n                color={color}\n                onClick={() => selectColor(color)}\n                isSelected={state.selectedColor?.hex === color.hex}\n              />\n            ))}\n          </SimpleGrid>\n        </Card.Body>\n      </Card.Root>\n    );\n  };\n\n  // Palette display component\n  const PaletteDisplay: React.FC<{ palette: ColorPalette }> = ({ palette }) => (\n    <Card.Root mb={6}>\n      <Card.Header>\n        <Flex justify=\"space-between\" align=\"center\" wrap=\"wrap\" gap={4}>\n          <Heading size=\"md\">\n            🎨 {palette.name}\n          </Heading>\n\n          <HStack gap={3}>\n            <Button\n              onClick={() => exportAsCSV(palette.id)}\n              title={`Download \"${palette.name}\" palette as CSV file with color details`}\n              colorScheme=\"green\"\n              size=\"sm\"\n            >\n              📄 Export CSV\n            </Button>\n\n            <Button\n              onClick={() => exportAsFigma(palette.id)}\n              title={`Download \"${palette.name}\" palette as Figma-compatible JSON file`}\n              colorScheme=\"blue\"\n              size=\"sm\"\n            >\n              🎨 Export Figma\n            </Button>\n          </HStack>\n        </Flex>\n      </Card.Header>\n\n      <Card.Body>\n        <Flex wrap=\"wrap\" gap={3} mb={4}>\n          {palette.colors.map((color, index) => (\n            <ColorSwatch\n              key={index}\n              color={color}\n              onClick={() => selectColor(color)}\n              isSelected={state.selectedColor?.hex === color.hex}\n            />\n          ))}\n        </Flex>\n\n        {/* Temperature badges */}\n        <HStack gap={2} wrap=\"wrap\">\n          {['warm', 'cool', 'neutral'].map(temp => {\n            const count = palette.colors.filter(c => c.temperature === temp).length;\n            if (count === 0) return null;\n            return (\n              <Badge\n                key={temp}\n                colorScheme={\n                  temp === 'warm' ? 'red' :\n                  temp === 'cool' ? 'blue' :\n                  'gray'\n                }\n                variant=\"solid\"\n                p={2}\n              >\n                {temp.charAt(0).toUpperCase() + temp.slice(1)}: {count}\n              </Badge>\n            );\n          })}\n        </HStack>\n      </Card.Body>\n    </Card.Root>\n  );\n\n  // Selected color details\n  const ColorDetails: React.FC = () => {\n    if (!state.selectedColor) return null;\n\n    return (\n      <div className={colorPickerStyles.colorDetails}>\n        <h4 className={colorPickerStyles.colorDetailsTitle}>\n          🔥 Selected Color\n        </h4>\n\n        <div \n          className={colorPickerStyles.colorSwatch}\n          style={{ backgroundColor: state.selectedColor.hex }}\n        />\n\n        <div className={colorPickerStyles.colorInfo}>\n          <p className=\"m-0\">\n            <strong>Hex:</strong> {state.selectedColor.hex}\n          </p>\n          <p className=\"m-0\">\n            <strong>RGB:</strong> rgb({state.selectedColor.rgb.r}, {state.selectedColor.rgb.g}, {state.selectedColor.rgb.b})\n          </p>\n          <p className=\"m-0\">\n            <strong>HSL:</strong> hsl({state.selectedColor.hsl.h}, {state.selectedColor.hsl.s}%, {state.selectedColor.hsl.l}%)\n          </p>\n          <p className=\"m-0\">\n            <strong>Temperature:</strong> {state.selectedColor.temperature.charAt(0).toUpperCase() + state.selectedColor.temperature.slice(1)}\n          </p>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className={colorPickerStyles.container}>\n      <ColorDetails />\n\n      {/* Header */}\n      <div className={colorPickerStyles.header}>\n        <h1 className={colorPickerStyles.title}>\n          🎨 Color Picker Studio\n        </h1>\n        <p className={colorPickerStyles.subtitle}>\n          Discover, analyze, and export beautiful color palettes\n        </p>\n\n        {/* App Info Message */}\n        <Alert.Root mb={6} status=\"info\">\n          <Alert.Indicator />\n          <Alert.Title>🌟 Welcome to Color Picker Studio</Alert.Title>\n          <Alert.Description>\n            <strong>Get creative with colors!</strong> You can pick custom colors using the hex input and RGB sliders,\n            explore our curated professional color palettes, or generate random color combinations.\n            See real-time canvas previews of your chosen colors in multiple artistic patterns.\n            Export your favorite palettes as CSV files or Figma-compatible JSON for use in your design projects.\n          </Alert.Description>\n        </Alert.Root>\n      </div>\n\n      {/* Controls */}\n      <Flex gap={4} wrap=\"wrap\" justify=\"center\" align=\"center\" p={4}>\n        <Button\n          onClick={generatePalette}\n          title=\"Generate a new random color palette with 6 unique colors\"\n          colorScheme=\"blue\"\n          size=\"md\"\n          flex={{ base: 1, md: \"auto\" }}\n          minW=\"200px\"\n        >\n          🎲 Generate Random Palette\n        </Button>\n\n        <Button\n          onClick={toggleColorWheel}\n          title={state.colorWheelVisible\n            ? \"Hide the color wheel spectrum\"\n            : \"Show full color wheel with 36 colors from the spectrum\"\n          }\n          variant={state.colorWheelVisible ? \"solid\" : \"outline\"}\n          colorScheme={state.colorWheelVisible ? \"purple\" : \"gray\"}\n          size=\"md\"\n          flex={{ base: 1, md: \"auto\" }}\n          minW=\"200px\"\n          _hover={{\n            bg: state.colorWheelVisible ? \"purple.600\" : \"gray.100\"\n          }}\n        >\n          {state.colorWheelVisible ? '🙈 Hide' : '🌀 Show'} Color Wheel\n        </Button>\n\n        <Button\n          onClick={toggleCanvasPreview}\n          title={state.canvasPreviewVisible\n            ? \"Hide canvas preview of your manual color palette\"\n            : \"Show visual canvas preview of your manual color palette with different patterns\"\n          }\n          variant={state.canvasPreviewVisible ? \"solid\" : \"outline\"}\n          colorScheme={state.canvasPreviewVisible ? \"teal\" : \"gray\"}\n          size=\"md\"\n          flex={{ base: 1, md: \"auto\" }}\n          minW=\"200px\"\n          _hover={{\n            bg: state.canvasPreviewVisible ? \"teal.600\" : \"gray.100\"\n          }}\n        >\n          {state.canvasPreviewVisible ? '🎨 Hide' : '🎨 Show'} Canvas Preview\n        </Button>\n      </Flex>\n\n      {/* Canvas Preview */}\n      {state.canvasPreviewVisible && state.manualPalette.length > 0 && (\n        <div className={colorPickerStyles.canvasPreview}>\n          <h2 className={colorPickerStyles.canvasTitle}>\n            🖼️ Canvas Preview\n          </h2>\n\n          <Flex gap={2} flexWrap=\"wrap\" justify=\"center\" mt={4}>\n            {[\n              { name: 'linear', desc: 'Simple gradient based on color distance' },\n              { name: 'radial', desc: 'Circular gradient from center outwards' },\n              { name: 'mosaic', desc: 'Grid pattern with color repetition' },\n              { name: 'spiral', desc: 'Spiral gradient pattern' }\n            ].map(pattern => (\n              <Button\n                key={pattern.name}\n                onClick={() => setCurrentPattern(pattern.name as typeof currentPattern)}\n                title={`Switch to ${pattern.desc} patterning algorithm`}\n                colorScheme={currentPattern === pattern.name ? \"blue\" : \"gray\"}\n                variant={currentPattern === pattern.name ? \"solid\" : \"outline\"}\n                size=\"sm\"\n                flex={{ base: 1, sm: \"auto\" }}\n                minW=\"100px\"\n              >\n                {pattern.name.charAt(0).toUpperCase() + pattern.name.slice(1)}\n              </Button>\n            ))}\n          </Flex>\n\n          <ColorCanvas colors={state.manualPalette} pattern={currentPattern} />\n        </div>\n      )}\n\n      {/* Manual Color Picker */}\n      <ManualColorPicker\n        colors={state.manualPalette}\n        onAddColor={addColorToManualPalette}\n        onRemoveColor={removeColorFromManualPalette}\n        onCreatePalette={createManualPalette}\n      />\n\n      {/* Color Wheel */}\n      {state.colorWheelVisible && <ColorWheel />}\n\n      {/* Generated Palettes */}\n      {state.palettes.length > 0 && (\n        <div className={colorPickerStyles.paletteSection}>\n          <h2 className={colorPickerStyles.paletteTitle}>\n            ✨ Generated Palettes\n          </h2>\n\n          {state.palettes.map(palette => (\n            <PaletteDisplay key={palette.id} palette={palette} />\n          ))}\n        </div>\n      )}\n\n      {/* Predefined Palettes */}\n      <div className={colorPickerStyles.paletteSection}>\n        <h2 className={colorPickerStyles.paletteTitle}>\n          🌈 Curated Color Palettes\n        </h2>\n\n        <div className={colorPickerStyles.paletteContainer}>\n          {predefinedPalettes.map(palette => (\n            <PaletteDisplay key={palette.id} palette={palette} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ColorPicker;\n","import { useMemo } from 'react';\n\nexport const useColorPickerStyles = () => {\n  const colorPickerStyles = useMemo(() => ({\n    container: 'max-w-6xl mx-auto px-4 py-8 min-h-screen',\n    header: 'text-center mb-10',\n    title: 'text-4xl font-bold text-gray-800 mb-4',\n    subtitle: 'text-lg text-gray-600 max-w-2xl mx-auto',\n    infoMessage: 'max-w-3xl mx-auto p-6 bg-gray-50 rounded-xl border border-gray-200 mb-10',\n    infoTitle: 'text-xl font-bold text-gray-800 mb-3 flex items-center justify-center gap-2',\n    infoText: 'text-gray-700 text-sm leading-relaxed text-left',\n    controls: 'flex flex-wrap gap-4 justify-center mb-10',\n    controlButton: (isActive: boolean) => \n      `px-6 py-3 rounded-lg font-bold text-white transition-all duration-300 shadow-lg ${\n        isActive \n          ? 'bg-gray-500 hover:bg-gray-600 transform hover:-translate-y-1' \n          : 'bg-red-500 hover:bg-red-600 transform hover:-translate-y-1'\n      }`,\n    canvasPreview: 'mt-8 mb-12',\n    canvasTitle: 'text-3xl font-bold text-gray-800 text-center mb-6',\n    patternButtons: 'flex flex-wrap justify-center gap-3 mb-6',\n    patternButton: (isActive: boolean) => \n      `px-4 py-2 rounded-lg font-bold transition-all duration-200 ${\n        isActive \n          ? 'bg-blue-500 text-white shadow-md' \n          : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n      }`,\n    colorDetails: 'fixed bottom-5 right-5 bg-white p-6 rounded-xl shadow-2xl min-w-[300px] z-50 border border-gray-200',\n    colorDetailsTitle: 'text-xl font-bold text-gray-800 mb-4',\n    colorSwatch: 'w-full h-20 rounded-lg mb-4',\n    colorInfo: 'text-sm text-gray-700 mb-1',\n    colorWheel: 'mt-10 p-8 bg-white rounded-xl shadow-lg',\n    wheelTitle: 'text-2xl font-bold text-gray-800 mb-6 text-center',\n    wheelColors: 'flex flex-wrap gap-2 justify-center',\n    paletteSection: 'mt-12 mb-10',\n    paletteTitle: 'text-3xl font-bold text-gray-800 text-center mb-8',\n    paletteContainer: 'space-y-12',\n    paletteDisplay: 'mb-10 p-6 bg-white rounded-xl shadow-lg',\n    paletteHeader: 'flex flex-wrap justify-between items-center mb-6 gap-4',\n    paletteName: 'text-2xl font-bold text-gray-800 m-0',\n    paletteActions: 'flex flex-wrap gap-3',\n    exportButton: (type: string) => \n      `px-4 py-2 rounded-lg font-bold transition-all duration-200 flex items-center gap-2 ${\n        type === 'csv' \n          ? 'bg-green-500 hover:bg-green-600 text-white' \n          : 'bg-blue-500 hover:bg-blue-600 text-white'\n      }`,\n    paletteColors: 'flex flex-wrap gap-3 mb-4',\n    colorSwatchSmall: (isSelected: boolean) => \n      `w-15 h-15 rounded-lg border-2 transition-all duration-200 cursor-pointer ${\n        isSelected \n          ? 'border-gray-800 shadow-lg scale-110' \n          : 'border-gray-300 hover:border-gray-500 hover:shadow-md'\n      }`,\n    tempTags: 'flex flex-wrap gap-2 mt-4',\n    tempTag: 'px-3 py-1 rounded-full text-xs font-medium',\n    tempTagWarm: 'bg-red-100 text-red-800',\n    tempTagCool: 'bg-blue-100 text-blue-800',\n    tempTagNeutral: 'bg-gray-100 text-gray-800',\n  }), []);\n\n  return { colorPickerStyles };\n};\n","import React from 'react';\nimport ColorPicker from '../components/ColorPicker/ColorPicker';\n\nconst ColorPickerView: React.FC = () => {\n  return (\n    <main className=\"bg-gray-100 min-h-screen\">\n      <ColorPicker />\n    </main>\n  );\n};\n\nexport default ColorPickerView;\n"],"names":["useColorPicker","state","setState","useState","selectedColor","palettes","currentPalette","colorWheelVisible","manualPalette","canvasPreviewVisible","predefinedPalettes","useMemo","id","name","type","colors","hex","rgb","r","g","b","hsl","h","s","l","temperature","generateColorWheel","useCallback","i","hue","saturation","Math","random","lightness","c","abs","x","m","finalR","round","finalG","finalB","hexValue","toString","padStart","push","toUpperCase","exportAsCSV","paletteId","palette","find","p","csvContent","map","color","index","join","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","toLowerCase","replace","body","appendChild","click","removeChild","exportAsFigma","figmaData","jsonContent","JSON","stringify","selectColor","prev","generatePalette","newPalette","Date","now","slice","toggleColorWheel","addColorToManualPalette","removeColorFromManualPalette","colorIndex","filter","_","createManualPalette","length","toggleCanvasPreview","createColorFromHex","startsWith","substring","parseInt","max","min","d","ManualColorPicker","onAddColor","onRemoveColor","onCreatePalette","hexInput","setHexInput","paletteName","setPaletteName","rgbInput","setRgbInput","hexToRgb","result","exec","handleHexInputChange","value","handleRgbInputChange","component","newRgb","jsxs","style","marginTop","padding","backgroundColor","borderRadius","boxShadow","children","jsx","fontSize","fontWeight","marginBottom","textAlign","display","flexDirection","gap","alignItems","justifyContent","flexWrap","onChange","e","target","title","width","height","border","cursor","background","placeholder","textShadow","outline","onClick","newColor","disabled","margin","position","transition","onMouseEnter","currentTarget","transform","onMouseLeave","removeColorFromPalette","top","right","lineHeight","overflow","textOverflow","whiteSpace","ColorCanvas","pattern","canvasRef","useRef","generatePattern","ctx","canvasColors","canvasWidth","canvasHeight","canvasPattern","colorsWithOpacities","opacity","j","y","fillStyle","fillRect","spiralCenterX","spiralCenterY","spiralMaxRadius","angle","radius","cos","PI","sin","floor","centerX","centerY","maxRadius","gradient","createRadialGradient","forEach","addColorStop","strokeStyle","lineWidth","beginPath","arc","stroke","gridSize","xRatio","yRatio","distance","sqrt","font","fillText","useEffect","canvas","current","getContext","clearRect","charAt","ref","imageRendering","ColorPicker","colorPickerStyles","container","header","subtitle","infoMessage","infoTitle","infoText","controls","controlButton","isActive","canvasPreview","canvasTitle","patternButtons","patternButton","colorDetails","colorDetailsTitle","colorSwatch","colorInfo","colorWheel","wheelTitle","wheelColors","paletteSection","paletteTitle","paletteContainer","paletteDisplay","paletteHeader","paletteActions","exportButton","paletteColors","colorSwatchSmall","isSelected","tempTags","tempTag","tempTagWarm","tempTagCool","tempTagNeutral","currentPattern","setCurrentPattern","ColorSwatch","Box","as","w","bg","borderColor","_hover","shadow","ColorWheel","Card.Root","mb","Card.Header","Heading","size","Card.Body","SimpleGrid","columns","base","sm","md","lg","_a","PaletteDisplay","Flex","justify","align","wrap","HStack","Button","colorScheme","temp","count","Badge","variant","ColorDetails","className","Alert.Root","status","Alert.Indicator","Alert.Title","Alert.Description","flex","minW","mt","desc","ColorPickerView"],"mappings":"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"}